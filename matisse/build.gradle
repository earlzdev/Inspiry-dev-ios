/*
 * Copyright 2017 Zhihu Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'checkstyle'

android {
    compileSdkVersion 33

    defaultConfig {
        minSdkVersion min_sdk_version
        targetSdkVersion 33
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }
    lint {
        abortOnError false
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "androidx.annotation:annotation:$androidx_annotatoin_version"
    implementation "androidx.recyclerview:recyclerview:$androidX_recyclerview_version"
    implementation "it.sephiroth.android.library.imagezoom:imagezoom:$image_zoom_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_extensions_version"

    compileOnly "com.github.bumptech.glide:glide:$glide_version"
    compileOnly "io.coil-kt:coil:$coil_version"
    compileOnly "com.squareup.picasso:picasso:$picasso_version"

    implementation "androidx.core:core-ktx:$app_compat_core_ktx_version"
}

task javadoc(type: Javadoc) {
    options.encoding = "utf-8"
}

checkstyle {
    toolVersion = '7.6.1'
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
}

task checkstyle(type: Checkstyle) {
    description 'Runs Checkstyle inspection against matisse sourcesets.'
    group = 'Code Quality'
    configFile rootProject.file('checkstyle.xml')
    ignoreFailures = false
    showViolations true
    classpath = files()
    source 'src/main/java'
}
repositories {
    mavenCentral()
}
